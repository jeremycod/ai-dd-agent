:root {
  --main-bg: #eaebf2; /* Background of the entire page */
  --container-bg: #ffffff; /* Background of the chat container */
  --border-color: #e0e0e0; /* Subtle border for container and input */
  --shadow-color: rgba(0, 0, 0, 0.05); /* Light, soft shadow */
  --text-dark: #333333; /* Main dark text color */
  --text-medium: #666666; /* Secondary text, placeholders */
  --text-light: #999999; /* Even lighter text, like feedback count */
  --accent-blue: #6c63ff; /* Primary accent blue (for header icon, send button) */
  --accent-blue-light: #f0f2ff; /* Lighter blue for highlights/backgrounds */
  --agent-bubble-bg: #f8f8f8; /* Background for agent messages */
  --user-bubble-bg: #dce0ef; /* Background for user messages (assumed from common patterns) */
  --feedback-button-bg: #f0f0f0; /* Background for feedback buttons */
  --feedback-button-hover: #e8e8e8;
  --feedback-active: #5c54e0; /* Darker accent for active feedback state */
  --code-bg: #eff1f3; /* Light background for code blocks */
  --code-text: #d14; /* Color for inline code */
  --code-block-text: #333333; /* Text for code blocks */
  --number-icon-bg: #ffffff; /* Background for the number icon */
  --number-icon-border: #d7d7db; /* Border for the number icon */
}

body {
  font-family: "Inter", sans-serif; /* Use Inter as the primary font */
  margin: 0;
  padding: 0;
  background-color: var(--main-bg);
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  color: var(--text-dark);
  font-size: 15px;
}

.chat-container {
  width: 100%;
  max-width: 850px;
  height: 95vh;
  min-height: 600px;
  background-color: var(--container-bg);
  border-radius: 12px;
  box-shadow: 0 4px 20px var(--shadow-color);
  display: flex;
  flex-direction: column;
  overflow: hidden;
  border: 1px solid var(--border-color);
}

.chat-header {
  padding: 16px 25px;
  background-color: var(--container-bg);
  color: var(--text-dark);
  font-weight: 600;
  font-size: 1.1em;
  border-bottom: 1px solid var(--border-color);
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  letter-spacing: 0.1px;
}

.chat-header svg {
  color: var(--accent-blue);
  width: 24px;
  height: 24px;
}

.messages {
  flex-grow: 1;
  padding: 20px 25px;
  overflow-y: auto;
  scroll-behavior: smooth;
  background-color: var(--container-bg);
  line-height: 1.6;
}

.agent-message-wrapper {
  display: flex;
  margin-bottom: 20px;
  max-width: 95%;
  align-items: flex-start;
  position: relative;
  padding-left: 50px;
}

.message-metadata {
  position: absolute;
  left: 0;
  top: 0px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 5px;
}

.avatar {
  width: 32px;
  height: 32px;
  border-radius: 50%;
  overflow: hidden;
  flex-shrink: 0;
  background-color: var(--accent-blue);
  display: flex;
  justify-content: center;
  align-items: center;
}
.avatar img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}
.avatar svg {
  width: 18px;
  height: 18px;
  color: white;
}

.message-number-icon {
  width: 28px;
  height: 28px;
  border-radius: 50%;
  background-color: var(--number-icon-bg);
  border: 1px solid var(--number-icon-border);
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: 500;
  font-size: 0.9em;
  color: var(--text-dark);
  flex-shrink: 0;
  margin-left: -50px;
}

/* Updated .message to be a flex container */
.message {
  padding: 16px 20px;
  border-radius: 8px;
  word-wrap: break-word;
  line-height: 1.6;
  max-width: calc(100% - 10px); /* Adjusted max-width slightly */
  box-shadow: 0 1px 4px var(--shadow-color);
  font-size: 0.95em;
  position: relative; /* Keep relative for future absolute elements if needed */
  flex-grow: 1;

  display: flex; /* Make it a flex container */
  flex-direction: column; /* Stack content vertically */
  justify-content: space-between; /* Push content to top, feedback to bottom */
  gap: 10px; /* Space between message content and feedback area */
}

.message-content-container {
  /* This will hold the actual text/markdown content */
  flex-grow: 1; /* Allows it to take up available space */
  width: 100%; /* Ensure it uses full width of its parent (.message) */
  /* Adjust padding to prevent content from touching bubble edges, but not for feedback */
  /* Padding is already on .message, so apply only if needed for specific content types */
}

.agent-message {
  background-color: var(--agent-bubble-bg);
  color: var(--text-dark);
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px;
  margin-left: 10px;
}

.user-message-wrapper {
  display: flex;
  justify-content: flex-end;
  margin-bottom: 20px;
  max-width: 100%;
}

.user-message {
  background-color: var(--user-bubble-bg);
  color: var(--text-dark);
  margin-right: 0;
  margin-left: auto;
  border-radius: 8px;
  border-top-right-radius: 4px;
  border-bottom-right-radius: 44px;
  padding: 16px 20px;
  box-shadow: 0 1px 4px var(--shadow-color);
  max-width: 85%;
}

/* Feedback area is now inside .message */
.feedback-area {
  width: 100%; /* Take full width of the message bubble */
  display: flex;
  flex-direction: column;
  align-items: flex-end; /* Align thumbs/comment to the right */
  padding-top: 10px; /* Space from message content above */
  border-top: 1px solid rgba(0, 0, 0, 0.05); /* Subtle separator */
  margin-top: auto; /* Pushes itself to the bottom of the flex container (.message) */
}

.feedback-container {
  display: flex;
  flex-direction: row; /* Layout buttons horizontally */
  gap: 8px; /* Space between thumb buttons */
  margin-top: 5px; /* Space from the top border of feedback-area */
  margin-bottom: 5px; /* Space from comment section if it appears */
}

.feedback-button {
  background-color: var(--feedback-button-bg);
  border: 1px solid var(--border-color);
  border-radius: 6px;
  width: 32px;
  height: 32px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition:
    background-color 0.2s ease,
    border-color 0.2s ease,
    transform 0.1s ease;
  color: var(--text-medium);
}

.feedback-button svg {
  width: 16px;
  height: 16px;
  stroke: currentColor;
}

.feedback-button:hover {
  background-color: var(--feedback-button-hover);
  border-color: var(--accent-blue);
  transform: translateY(-1px);
}

.feedback-button.active {
  background-color: var(--accent-blue);
  border-color: var(--accent-blue);
  color: white;
}
.feedback-button.active svg {
  color: white;
}

/* Styles for the comment section */
.feedback-comment-section {
  width: 100%; /* Full width of the message bubble */
  display: flex;
  flex-direction: column;
  gap: 8px;
  padding: 8px 0; /* Add vertical padding */
  /* Instead of `display: none` and `flex`, we'll use max-height for smooth transition */
  max-height: 0;
  overflow: hidden;
  transition:
    max-height 0.3s ease-out,
    padding 0.3s ease-out;
  opacity: 0;
  pointer-events: none; /* Disable interaction when hidden */
}

.feedback-comment-section.visible {
  max-height: 150px; /* Adjust based on max expected comment box height */
  padding: 8px 0;
  opacity: 1;
  pointer-events: auto; /* Enable interaction when visible */
}

.feedback-comment-input {
  width: calc(100% - 16px); /* Adjust for padding */
  padding: 8px;
  border: 1px solid var(--border-color);
  border-radius: 6px;
  font-family: "Inter", sans-serif;
  font-size: 0.9em;
  color: var(--text-dark);
  background-color: var(--container-bg); /* Use container bg for input */
  resize: vertical;
  min-height: 40px;
  max-height: 80px; /* Limit max height to prevent excessively large boxes */
}

.feedback-comment-input:focus {
  outline: none;
  border-color: var(--accent-blue);
  box-shadow: 0 0 0 2px rgba(108, 99, 255, 0.1);
}

.feedback-comment-submit {
  align-self: flex-end;
  padding: 6px 15px;
  background-color: var(--accent-blue);
  color: white;
  border: none;
  border-radius: 20px;
  cursor: pointer;
  font-size: 0.9em;
  font-weight: 500;
  transition:
    background-color 0.2s ease,
    transform 0.1s ease;
}

.feedback-comment-submit:hover {
  background-color: var(--feedback-active);
  transform: translateY(-1px);
}

.feedback-thanks {
  font-size: 0.9em;
  color: var(--text-medium);
  text-align: right;
  width: 100%; /* Ensure it takes full width when replacing */
  padding: 8px 0; /* Consistent padding */
  font-style: italic; /* A bit more subtle */
}

/* Markdown specific styles */
/* (Keep existing markdown styles as they are, they should work fine within .message-content-container) */
.agent-message h1,
.agent-message h2,
.agent-message h3,
.agent-message h4,
.agent-message h5,
.agent-message h6 {
  font-weight: 600;
  color: var(--text-dark);
  margin-top: 1.2em;
  margin-bottom: 0.6em;
}
.agent-message h1 {
  font-size: 1.8em;
}
.agent-message h2 {
  font-size: 1.5em;
}
.agent-message h3 {
  font-size: 1.2em;
}

.message-section {
  display: flex;
  align-items: flex-start;
  margin-bottom: 1em;
  padding-left: 10px;
}

.message-section .message-number-icon {
  position: static;
  margin-right: 15px;
  margin-top: 5px;
  flex-shrink: 0;
}

.message-section h3 {
  margin-top: 0;
  margin-bottom: 0.5em;
}

.message-section ul,
.message-section ol {
  margin-left: 0;
  padding-left: 0;
  list-style: none;
}

.message-section li {
  margin-bottom: 0.5em;
  position: relative;
  padding-left: 20px;
}

.message-section ul li::before {
  content: "â€¢";
  color: var(--text-medium);
  position: absolute;
  left: 0;
  font-size: 1.2em;
  line-height: 1;
}

.agent-message p {
  margin-top: 0.5em;
  margin-bottom: 0.8em;
  color: var(--text-dark);
}
.agent-message p:first-of-type {
  margin-top: 0;
}

.agent-message strong {
  font-weight: 600;
  color: var(--text-dark);
}
.agent-message em {
  font-style: italic;
  color: var(--text-medium);
}
.agent-message code {
  font-family: "SFMono-Regular", "Menlo", "Consolas", monospace;
  background-color: var(--code-bg);
  padding: 3px 6px;
  border-radius: 4px;
  font-size: 0.9em;
  color: var(--code-text);
}
.agent-message pre {
  background-color: var(--code-bg);
  color: var(--code-block-text);
  padding: 15px;
  border-radius: 6px;
  overflow-x: auto;
  font-family: "SFMono-Regular", "Menlo", "Consolas", monospace;
  font-size: 0.9em;
  margin-top: 1em;
  margin-bottom: 1em;
  border: 1px solid var(--border-color);
}
.agent-message pre code {
  background-color: transparent;
  color: inherit;
  padding: 0;
  border-radius: 0;
  font-size: 1em;
}

/* Input Area */
.input-area {
  display: flex;
  padding: 15px 25px;
  border-top: 1px solid var(--border-color);
  background-color: var(--container-bg);
  gap: 10px;
  align-items: center;
}
.input-area input {
  flex-grow: 1;
  padding: 12px 18px;
  border: 1px solid var(--border-color);
  border-radius: 24px;
  background-color: var(--container-bg);
  color: var(--text-dark);
  font-size: 15px;
  outline: none;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);
}
.input-area input::placeholder {
  color: var(--text-medium);
  opacity: 0.8;
}
.input-area input:focus {
  border-color: var(--accent-blue);
  box-shadow:
    0 0 0 2px rgba(108, 99, 255, 0.1),
    inset 0 1px 3px rgba(0, 0, 0, 0.05);
}
.input-area button {
  width: 44px;
  height: 44px;
  background-color: var(--accent-blue);
  color: white;
  border: none;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  transition:
    background-color 0.2s ease,
    transform 0.1s ease;
  flex-shrink: 0;
}
.input-area button svg {
  width: 22px;
  height: 22px;
  color: white;
}
.input-area button:hover {
  background-color: var(--feedback-active);
  transform: translateY(-1px);
}

/* Typing Indicator */
.typing-indicator {
  font-style: italic;
  color: var(--text-medium);
  padding: 10px 15px;
  border-radius: 8px;
  background-color: var(--agent-bubble-bg);
  width: fit-content;
  margin-top: 10px;
  animation: none;
  display: flex;
  align-items: flex-end;
  gap: 3px;
  box-shadow: 0 1px 4px var(--shadow-color);
  margin-left: 50px;
}

.typing-indicator span {
  display: inline-block;
  width: 6px;
  height: 6px;
  background-color: var(--text-medium);
  border-radius: 50%;
  animation: dotPulse 1.4s infinite ease-in-out;
}
.typing-indicator span:nth-child(1) {
  animation-delay: 0s;
}
.typing-indicator span:nth-child(2) {
  animation-delay: 0.2s;
}
.typing-indicator span:nth-child(3) {
  animation-delay: 0.4s;
}

@keyframes dotPulse {
  0%,
  100% {
    transform: scale(0.7);
    opacity: 0.5;
  }
  50% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Scrollbar styles */
.messages::-webkit-scrollbar {
  width: 8px;
}
.messages::-webkit-scrollbar-track {
  background: var(--container-bg);
}
.messages::-webkit-scrollbar-thumb {
  background: #d8d8dc;
  border-radius: 10px;
  border: 2px solid var(--container-bg);
}
.messages::-webkit-scrollbar-thumb:hover {
  background: #c0c0c0;
}

/* Media queries for responsiveness */
@media (max-width: 768px) {
  body {
    padding: 0;
  }
  .chat-container {
    height: 100vh;
    border-radius: 0;
    box-shadow: none;
    border: none;
  }
  .messages {
    padding: 15px;
  }
  .input-area {
    padding: 10px 15px;
  }
  .input-area button {
    width: 40px;
    height: 40px;
  }
  .input-area input {
    padding: 10px 15px;
  }
  .agent-message-wrapper {
    padding-left: 45px;
    max-width: 100%;
  }
  .message {
    max-width: calc(100% - 10px); /* Adjusted max-width slightly */
    padding-right: 20px; /* Keep consistent padding */
  }
  .feedback-area {
    /* Position is relative now, so no absolute right/bottom */
    width: 100%;
  }
  .feedback-button {
    width: 30px;
    height: 30px;
  }
  .message-metadata {
    top: 0px;
  }
  .feedback-comment-section {
    width: 100%; /* Full width */
  }
  .feedback-comment-input {
    width: calc(100% - 16px);
  }
}

/* Existing styles above... */

/* Markdown specific styles */
/* IMPORTANT: Modify existing heading styles to make them flex containers */
.agent-message h1,
.agent-message h2,
.agent-message h3,
.agent-message h4,
.agent-message h5,
.agent-message h6 {
  font-weight: 600;
  color: var(--text-dark);
  margin-top: 1.2em;
  margin-bottom: 0.6em;
  display: flex; /* Make headings flex to align icon and text */
  align-items: center; /* Vertically center icon with text */
  gap: 8px; /* Space between icon and text */
}

/* NEW: Style for the injected heading icons */
.heading-icon {
  display: inline-flex; /* Ensures it behaves like text but can be styled */
  align-items: center;
  justify-content: center;
  flex-shrink: 0; /* Prevent icon from shrinking */
  color: var(--accent-blue); /* Color for the SVG stroke/fill */
  /* Adjust size based on your SVG viewBox, ensure it matches the heading font size visually */
}
.heading-icon svg {
  width: 1em; /* Make SVG size relative to font size of the parent heading */
  height: 1em;
  stroke: currentColor; /* Inherit color from parent (.heading-icon) */
  fill: none; /* Default for line-based icons. Change to 'currentColor' if your SVGs are filled shapes. */
}

/* ...rest of your existing CSS below */
